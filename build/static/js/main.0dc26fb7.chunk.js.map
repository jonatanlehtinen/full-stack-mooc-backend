{"version":3,"sources":["api.js","Filter.js","PersonForm.js","Persons.js","actionTypes.js","Notification.js","App.js","index.js"],"names":["baseURL","Filter","setFilter","onChange","filter","target","value","PersonForm","setName","setNumber","submit","name","number","type","onClick","Persons","persons","handleDelete","map","person","key","ACTION_TYPES","ADD","DELETE","UPDATE","Notification","notification","success","successful","message","action","TYPES","personName","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setNotification","useEffect","Axios","get","then","response","data","updateNumber","oldPerson","updatedPerson","put","id","showNotification","catch","err","setTimeout","event","preventDefault","filteredPersons","length","window","confirm","newPerson","concat","post","toLowerCase","includes","personToDelete","filtered","delete","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0dc26fb7.chunk.js","sourcesContent":["import Axios from \"axios\"\n\nconst baseURL = \"/api/persons\"\n\nconst getPersons = () => {\n  const request = Axios.get(baseURL)\n  return request.then(response =>  response.data )\n}\n\nconst postNewPerson = person => {\n  const request = Axios.post(baseURL, person)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = id => {\n  const request = Axios.delete(baseURL + \"/\" + id,)\n  return request.then(response => response.data)\n}\n\nconst updatePerson = person => {\n  const request = Axios.put(baseURL + \"/\" + person.id, person)\n  return request.then(response => response.data)\n}\n\nexport { getPersons, postNewPerson, deletePerson, updatePerson }","import React from 'react'\n\n\nconst Filter = ({ setFilter }) => {\n  return (\n    <div>\n      filter shown with<input onChange={filter => setFilter(filter.target.value)}/>\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\n\nconst PersonForm = ({ setName, setNumber, submit }) => {\n  return (\n    <form>\n      <div>\n        name: <input onChange={name => setName(name.target.value)}/>\n      </div>\n      <div>\n        number: <input onChange={number => setNumber(number.target.value)}/>\n        </div>\n      <div>\n        <button type=\"submit\" onClick={submit}>add</button>\n      </div>\n  </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\n\nconst Persons = ({ persons, handleDelete }) => {\n  return (\n    <div>\n      {persons.map(person => {\n        return (\n          <div key={person.name}>\n            {person.name} {person.number} <button onClick={() => handleDelete(person)}>delete</button>\n          </div>\n        )\n      }\n      )}\n    </div>\n  )\n}\n\nexport default Persons","const ACTION_TYPES = {\n  ADD: \"ADD\",\n  DELETE: \"DELETE\",\n  UPDATE: \"UPDATE\" \n}\n\nexport default ACTION_TYPES","import React from 'react'\n\nimport TYPES from \"./actionTypes\"\n\nimport \"./styles.css\"\n\nconst Notification = ({ notification }) => {\n  if(notification === null) {\n    return null\n  }\n\n  const success = notification.successful\n\n  let message = ''\n  switch (notification.action) {\n    case TYPES.ADD:\n      message =  success ? `Added ${notification.personName}` : `Failed to add ${notification.personName}`\n      break\n    case TYPES.DELETE:\n      message = success ? `Deleted ${notification.personName}` : `Failed to delete ${notification.personName}`\n      break\n    case TYPES.UPDATE:\n      message = success ? `Updated ${notification.personName}'s number` : `Failed to update ${notification.personName}'s number` \n      break\n  }\n\n  return (\n    <div className={notification.successful ? \"success\" : \"error\"}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react';\nimport { getPersons, postNewPerson, deletePerson, updatePerson } from \"./api\"\n\nimport Filter from './Filter';\nimport PersonForm from './PersonForm';\nimport Persons from './Persons';\nimport Notification from './Notification';\n\nimport ACTION_TYPES from \"./actionTypes\"\n\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [filter, setFilter] = useState('')\n  const [notification, setNotification] = useState(null)\n\n  useEffect(() => {\n    getPersons().then(data => {\n      setPersons(data)\n    })\n  }, [])\n\n  const addToPersons = event => {\n    event.preventDefault()\n    const filteredPersons = persons.filter(person => person.name === newName)\n    if(filteredPersons.length > 0) {\n      const oldPerson = filteredPersons[0]\n      const confirmed = window.confirm(`${oldPerson.name} is already added to phonebook, replace the old number with a new one?`)\n      if(confirmed) {\n        updateNumber(oldPerson)\n      }\n    } else {\n      const newPerson = {name: newName, number: newNumber}\n      setPersons(persons.concat(newPerson))\n      postNewPerson(newPerson).then(() => {\n        setNewName(\"\")\n        showNotification({\n          action: ACTION_TYPES.ADD,\n          personName: newPerson.name,\n          successful: true\n        })\n      }).catch(err => {\n        showNotification({\n          action: ACTION_TYPES.ADD,\n          personName: newPerson.name,\n          successful: false\n        })\n      })\n    }\n  }\n\n  const updateNumber = oldPerson => {\n    const updatedPerson = {...oldPerson, number: newNumber}\n    updatePerson(updatedPerson).then(data => {\n      setPersons(persons.map(person => {\n        if(data.id !== person.id) {\n          return person\n        } else {\n          return data\n        }\n      }))\n      showNotification({\n        action: ACTION_TYPES.UPDATE,\n        personName: updatedPerson.name,\n        successful: true\n      })\n    }).catch(err => {\n      showNotification({\n        action: ACTION_TYPES.UPDATE,\n        personName: updatedPerson.name,\n        successful: false\n      })\n    })\n  }\n\n  const showNotification = notification => {\n    setNotification(notification)\n    setTimeout(() => setNotification(null), 5000)\n  }\n\n  const handleDeletingPerson = personToDelete => {\n    const confirmed = window.confirm(`Delete ${personToDelete.name}?`)\n    if(confirmed) {\n      const filtered = persons.filter(person => person.id !== personToDelete.id)\n      setPersons(filtered)\n      deletePerson(personToDelete.id).then(() => {\n        showNotification({\n          action: ACTION_TYPES.DELETE,\n          personName: personToDelete.name,\n          successful: true\n        })\n    }).catch(err => {\n      showNotification({\n        action: ACTION_TYPES.DELETE,\n        personName: personToDelete.name,\n        successful: false\n      })\n    })\n    }\n  }\n\n  const filterPersonsToShow = () => {\n    return persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification}/>\n      <Filter setFilter={setFilter}/>\n      <h2>Add a new</h2>\n      <PersonForm setName={setNewName} setNumber={setNewNumber} submit={addToPersons}/>\n      <h2>Numbers</h2>\n      <Persons persons={filterPersonsToShow()} handleDelete={handleDeletingPerson}/>\n    </div>\n  )\n\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}